{"version":3,"sources":["../src/inputs/Pointer.ts","../src/Loader.ts","../src/Engine.ts"],"names":["Cursor","game","value","Pointer","Point","g","distX","distY","e","cursor","cIds","i","EC_DRAGGABLE_SPRITES","sprite","hitTestPoint","children","Loader","sources","resolve","loadHandler","source","extension","tag","callback","image","fontFamily","newStyle","fontFace","res","file","baseUrl","imageUrl","imgSrc","imgCallback","frame","sound","Sound","Engine","Scene","width","height","framerate","fixed","border","backgroundColor","canvas","ctx","now","self","stage","totalDraws","totalObjects","display","round","num","parentAlpha","Spritemap","child","Line","vpHalfWidth","vpHalfHeight","vec","Vector2D","combinedHalfWidths","combinedHalfHeights","EC_BUTTONS","button","EC_EMITTERS","emitter","EC_PARTICLES","particle","EC_TWEENS","tween","EC_SHAKING_SPRITES","auto","wWidth","Detect","wHeight"],"mappings":"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","sourcesContent":["import { type DisplayObject } from \"DisplayObject\";\nimport { type Engine } from \"Engine\";\nimport { hitTestPoint } from \"inks2d/collision\";\nimport { Point } from \"inks2d/math\";\nimport { EC_DRAGGABLE_SPRITES } from \"EngineConstants\";\n\nclass Cursor {\n\tprivate _x: number = 0;\n\tprivate _y: number = 0;\n\tprivate readonly _g: Engine;\n\n\tpublic downTime: number = 0;\n\tpublic elapsedTime?: number;\n\n\tpublic isDown: boolean = false;\n\tpublic isUp: boolean = true;\n\tpublic tapped: boolean = false;\n\tpublic isPrimary: boolean = false;\n\n\tpublic clear: boolean = false;\n\n\tpublic dragSprite: any = null;\n\tpublic dragOffsetX: number = 0;\n\tpublic dragOffsetY: number = 0;\n\n\tconstructor(game: Engine) {\n\t\tthis._g = game;\n\t}\n\n\tget x(): number {\n\t\treturn this._x / this._g.getViewportScale().x;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tget y(): number {\n\t\treturn this._y / this._g.getViewportScale().y;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n/**\n *\n * Main game engine class. Manages the game loop.\n *\n * ```ts\n * import { Engine } from \"inks2d\";\n *\n * const g = new Engine(500, 500);\n * g.start();\n * ```\n *\n */\nexport class Pointer {\n\tprivate readonly _g: Engine;\n\tprivate readonly _element: HTMLCanvasElement;\n\tprivate _x: number = 0;\n\tprivate _y: number = 0;\n\tprivate readonly _cursors: Map<number, Cursor>;\n\tprivate readonly _startPoint: Point = new Point();\n\tprivate readonly _endPoint: Point = new Point();\n\n\tpublic isDown: boolean = false;\n\tpublic isUp: boolean = true;\n\tpublic tapped: boolean = false;\n\n\tpublic press?: (cursor: Cursor) => void;\n\tpublic release?: (cursor: Cursor) => void;\n\tpublic tap?: (cursor: Cursor) => void;\n\tpublic move?: (cursor: Cursor) => void;\n\tpublic swipe?: (direction: string) => void;\n\tpublic swipeTolerance: number = 10;\n\n\tconstructor(g: Engine) {\n\t\tthis._g = g;\n\t\tthis._element = g.canvas;\n\t\tthis._cursors = new Map();\n\n\t\tthis._element.addEventListener(\n\t\t\t\"pointerdown\",\n\t\t\tthis.downHandler.bind(this),\n\t\t\tfalse,\n\t\t);\n\t\tthis._element.addEventListener(\n\t\t\t\"pointerup\",\n\t\t\tthis.upHandler.bind(this),\n\t\t\tfalse,\n\t\t);\n\t\tthis._element.addEventListener(\n\t\t\t\"pointermove\",\n\t\t\tthis.moveHandler.bind(this),\n\t\t\tfalse,\n\t\t);\n\n\t\tthis._element.style.touchAction = \"none\";\n\t}\n\n\tget x(): number {\n\t\treturn this._x / this._g.getViewportScale().x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y / this._g.getViewportScale().y;\n\t}\n\n\tget centerX(): number {\n\t\treturn this._x;\n\t}\n\n\tget centerY(): number {\n\t\treturn this._y;\n\t}\n\n\tget cursors(): Map<number, Cursor> {\n\t\treturn this._cursors;\n\t}\n\n\tprivate swipeDirection(): void {\n\t\tconst distX = this._startPoint.x - this._endPoint.x;\n\t\tconst distY = this._startPoint.y - this._endPoint.y;\n\n\t\tif (Math.abs(distX) + Math.abs(distY) > this.swipeTolerance) {\n\t\t\tif (Math.abs(distX) > Math.abs(distY)) {\n\t\t\t\tif (distX > 0) {\n\t\t\t\t\tif (this.swipe != null) this.swipe(\"left\");\n\t\t\t\t} else {\n\t\t\t\t\tif (this.swipe != null) this.swipe(\"right\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (distY > 0) {\n\t\t\t\t\tif (this.swipe != null) this.swipe(\"up\");\n\t\t\t\t} else {\n\t\t\t\t\tif (this.swipe != null) this.swipe(\"down\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate downHandler(e: PointerEvent): void {\n\t\tconst cursor: Cursor = new Cursor(this._g);\n\t\tcursor.x = e.pageX - this._element.offsetLeft;\n\t\tcursor.y = e.pageY - this._element.offsetTop;\n\n\t\tcursor.isDown = true;\n\t\tcursor.isUp = false;\n\t\tcursor.tapped = false;\n\n\t\tcursor.downTime = Date.now();\n\t\tthis._cursors.set(e.pointerId, cursor);\n\n\t\tif (e.isPrimary) {\n\t\t\tthis._x = e.pageX - this._element.offsetLeft;\n\t\t\tthis._y = e.pageY - this._element.offsetTop;\n\n\t\t\tthis.isDown = true;\n\t\t\tthis.isUp = false;\n\t\t\tthis.tapped = false;\n\n\t\t\tcursor.isPrimary = true;\n\t\t}\n\n\t\tif (this.press != null) this.press(cursor);\n\n\t\tthis._startPoint.set(this._x, this._y);\n\n\t\te.preventDefault();\n\t}\n\n\tprivate upHandler(e: PointerEvent): void {\n\t\tconst cursor = this._cursors.get(e.pointerId);\n\n\t\tif (!cursor) return;\n\n\t\tcursor.x = e.pageX - this._element.offsetLeft;\n\t\tcursor.y = e.pageY - this._element.offsetTop;\n\n\t\tcursor.isDown = false;\n\t\tcursor.isUp = true;\n\n\t\tcursor.elapsedTime = Math.abs(cursor.downTime - Date.now());\n\t\tthis._cursors.set(e.pointerId, cursor);\n\n\t\tif (cursor.elapsedTime <= 200 && !cursor.tapped) {\n\t\t\tcursor.tapped = true;\n\n\t\t\tif (this.tap != null) this.tap(cursor);\n\t\t}\n\n\t\tif (e.isPrimary) {\n\t\t\tthis._x = e.pageX - this._element.offsetLeft;\n\t\t\tthis._y = e.pageY - this._element.offsetTop;\n\t\t\tthis.isDown = false;\n\t\t\tthis.isUp = true;\n\t\t\tthis.tapped = cursor.tapped;\n\t\t}\n\n\t\tif (this.release != null) this.release(cursor);\n\n\t\tthis._endPoint.set(this._x, this._y);\n\n\t\tthis.swipeDirection();\n\n\t\tcursor.clear = true;\n\n\t\te.preventDefault();\n\t}\n\n\tprivate moveHandler(e: PointerEvent): void {\n\t\tlet cursor = this._cursors.get(e.pointerId);\n\n\t\tif (!cursor) cursor = new Cursor(this._g);\n\n\t\tcursor.x = e.pageX - this._element.offsetLeft;\n\t\tcursor.y = e.pageY - this._element.offsetTop;\n\t\tthis._cursors.set(e.pointerId, cursor);\n\n\t\tif (e.isPrimary) {\n\t\t\tthis._x = e.pageX - this._element.offsetLeft;\n\t\t\tthis._y = e.pageY - this._element.offsetTop;\n\t\t}\n\n\t\tif (this.move != null) this.move(cursor);\n\n\t\te.preventDefault();\n\t}\n\n\tclearCache(): void {\n\t\tconst cIds = Array.from(this._cursors.keys());\n\n\t\tfor (let i = this._cursors.size - 1; i >= 0; i--) {\n\t\t\tconst cursor = this._cursors.get(cIds[i]);\n\n\t\t\tif (!cursor) continue;\n\n\t\t\tif (cursor.clear) this._cursors.delete(cIds[i]);\n\t\t}\n\t}\n\n\t_____updateDragAndDrop(): void {\n\t\tconst cIds = Array.from(this._cursors.keys());\n\n\t\tfor (let i = 0; i < cIds.length; i++) {\n\t\t\tconst cursor = this._cursors.get(cIds[i]);\n\n\t\t\tif (!cursor) continue;\n\n\t\t\tif (cursor.isDown) {\n\t\t\t\tif (cursor.dragSprite === null) {\n\t\t\t\t\tfor (let i = EC_DRAGGABLE_SPRITES.length - 1; i > -1; i--) {\n\t\t\t\t\t\tconst sprite = EC_DRAGGABLE_SPRITES[i];\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\thitTestPoint(new Point(cursor.x, cursor.y), sprite, true)\n\t\t\t\t\t\t\t\t.hasContact &&\n\t\t\t\t\t\t\tsprite.draggable &&\n\t\t\t\t\t\t\tsprite.visible\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (sprite.allowHorizontalDrag)\n\t\t\t\t\t\t\t\tcursor.dragOffsetX = cursor.x - sprite.position.x;\n\t\t\t\t\t\t\tif (sprite.allowVerticalDrag)\n\t\t\t\t\t\t\t\tcursor.dragOffsetY = cursor.y - sprite.position.y;\n\n\t\t\t\t\t\t\tcursor.dragSprite = sprite;\n\n\t\t\t\t\t\t\tif (sprite.allowFocusDrag) {\n\t\t\t\t\t\t\t\tconst children = sprite.parent?.children;\n\t\t\t\t\t\t\t\tif (children) {\n\t\t\t\t\t\t\t\t\tchildren.splice(children.indexOf(sprite), 1);\n\t\t\t\t\t\t\t\t\tchildren.push(sprite);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tEC_DRAGGABLE_SPRITES.splice(\n\t\t\t\t\t\t\t\tEC_DRAGGABLE_SPRITES.indexOf(sprite),\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tEC_DRAGGABLE_SPRITES.push(sprite);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (cursor.dragSprite.allowHorizontalDrag)\n\t\t\t\t\t\tcursor.dragSprite.position.x = cursor.x - cursor.dragOffsetX;\n\t\t\t\t\tif (cursor.dragSprite.allowVerticalDrag)\n\t\t\t\t\t\tcursor.dragSprite.position.y = cursor.y - cursor.dragOffsetY;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursor.isUp) {\n\t\t\t\tcursor.dragSprite = null;\n\t\t\t}\n\t\t}\n\n\t\tEC_DRAGGABLE_SPRITES.some((sprite: DisplayObject) => {\n\t\t\tif (\n\t\t\t\thitTestPoint(new Point(this._x, this._y), sprite, true).hasContact &&\n\t\t\t\tsprite.draggable &&\n\t\t\t\tsprite.visible\n\t\t\t) {\n\t\t\t\tthis._element.style.cursor = \"pointer\";\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n}\n","import { Sound } from \"./effects/sfx/Sound\";\n\n/**\n *\n * The Loader class. Useful to load sounds, graphics, fonts, etc.\n *\n * > ⚠️ You can **ONLY** use this class by the {@link Engine.loader | Engine.loader} property.\n *\n * ```ts\n * import { Engine, Scene } from \"inks2d\";\n * import { Point } from \"inks2d/math\";\n *\n * const g = new Engine(500, 500);\n *\n * class Main extends Scene {\n * \tconstructor() {\n * \t\tsuper();\n * \t}\n *\n *\tstart(e: Engine) {\n * \t\tsuper.start(e);\n *\n * \t\tconst cat = new Sprite(g.loader.store[\"images/spaceship.png\"]);\n * \t\tcat.position = new Point(g.stage.width / 2, g.stage.height / 2);\n * \t\tg.stage.addChild(cat);\n * \t}\n * }\n *\n * g.loader.onUpdate = (toLoad, loaded) => {\n * \tconsole.log(toLoad, loaded);\n * };\n *\n * g.loader.onComplete = () => {\n * \tg.scene = new Main();\n * \tg.start();\n * };\n *\n * g.loader.load([\n * \t\"images/spaceship.png\",\n * \t\"maps/level1.json\",\n * \t\"sounds/music.wav\",\n * ]);\n *\n * ```\n *\n * @category inks2d\n */\nexport class Loader {\n\tprivate readonly _imgExt: string[] = [\"png\", \"jpg\", \"gif\"];\n\tprivate readonly _fontExt: string[] = [\"ttf\", \"otf\", \"ttc\", \"woff\"];\n\tprivate readonly _jsonExt: string[] = [\"json\"];\n\tprivate readonly _audioExt: string[] = [\"mp3\", \"ogg\", \"wav\", \"webm\", \"m4a\"];\n\tprivate _store: Record<string, any> = {};\n\n\t/**\n\t * Number of assets to load.\n\t */\n\tpublic toLoad: number = 0;\n\t/**\n\t * Number of loaded assets.\n\t */\n\tpublic loaded: number = 0;\n\t/**\n\t * Called when a resource finishes loading.\n\t */\n\tpublic onUpdate?: (loaded: number, toLoad: number) => void;\n\t/**\n\t * Called when all resources have finished loading.\n\t */\n\tpublic onComplete?: (loaded: number) => void;\n\n\t/**\n\t * All the loaded assets goes here.\n\t */\n\tget store(): Record<string, any> {\n\t\treturn this._store;\n\t}\n\n\t/**\n\t * Loads the queue of resources. The following extensions are allowed:\n\t *\n\t * ```\n\t * Image => \"png\", \"jpg\", \"gif\"\n\t * Font  => \"ttf\", \"otf\", \"ttc\", \"woff\"\n\t * Json  => \"json\"\n\t * Audio => \"mp3\", \"ogg\", \"wav\", \"webm\", \"m4a\"\n\t * ```\n\t *\n\t * @param sources An array of file names.\n\t * @returns Promise\n\t */\n\tpublic async load(sources: string[]): Promise<any> {\n\t\treturn await new Promise((resolve) => {\n\t\t\tconst loadHandler = (): void => {\n\t\t\t\tthis.loaded += 1;\n\n\t\t\t\tif (this.onUpdate != null) this.onUpdate(this.loaded, this.toLoad);\n\n\t\t\t\tif (this.toLoad === this.loaded) {\n\t\t\t\t\tthis.toLoad = 0;\n\t\t\t\t\tthis.loaded = 0;\n\n\t\t\t\t\tif (this.onComplete != null) this.onComplete(this.loaded);\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.loaded = 0;\n\t\t\tthis.toLoad = sources.length;\n\n\t\t\tsources.forEach((source) => {\n\t\t\t\tconst extension = source.split(\".\").pop() as string;\n\n\t\t\t\tif (this._imgExt.includes(extension)) {\n\t\t\t\t\tthis.loadImage(source, loadHandler);\n\t\t\t\t} else if (this._fontExt.includes(extension)) {\n\t\t\t\t\tthis.loadFont(source, loadHandler);\n\t\t\t\t} else if (this._jsonExt.includes(extension)) {\n\t\t\t\t\tthis.loadJson(source, loadHandler);\n\t\t\t\t} else if (this._audioExt.includes(extension)) {\n\t\t\t\t\tthis.loadSound(source, loadHandler);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`File type not recognized: ${source}`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic loadbase64Image(\n\t\tsource: string,\n\t\ttag: string,\n\t\tcallback?: () => void,\n\t): void {\n\t\tconst image = new Image();\n\n\t\tif (callback != null) image.addEventListener(\"load\", callback);\n\n\t\tthis._store[tag] = image;\n\n\t\timage.src = source;\n\t}\n\n\tpublic loadImage(source: string, callback?: () => void): void {\n\t\tconst image = new Image();\n\n\t\tif (callback != null) image.addEventListener(\"load\", callback);\n\n\t\tthis._store[source] = image;\n\n\t\timage.src = source;\n\t}\n\n\tpublic loadFont(source: string, callback?: () => void): void {\n\t\tconst fontFamily = source.split(\"/\").pop()?.split(\".\")[0] ?? \"\";\n\t\tconst newStyle = document.createElement(\"style\");\n\t\tconst fontFace = `@font-face {font-family: '${fontFamily}'; src: url('${source}');}`;\n\t\tnewStyle.appendChild(document.createTextNode(fontFace));\n\t\tdocument.head.appendChild(newStyle);\n\t\tif (callback != null) callback();\n\t}\n\n\tpublic loadJson(source: string, callback?: () => void): void {\n\t\tfetch(source).then((res) => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tres.json().then((file) => {\n\t\t\t\t\tfile.name = source;\n\t\t\t\t\tthis._store[file.name] = file;\n\n\t\t\t\t\tif (file.frames) {\n\t\t\t\t\t\tthis.createTilesetFrames(file, source, callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (callback != null) callback();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate createTilesetFrames(\n\t\tfile: any,\n\t\tsource: string,\n\t\tcallback?: () => void,\n\t): void {\n\t\tconst baseUrl = source.replace(/[^\\\\/]*$/, \"\");\n\t\tconst imageUrl = file.meta.image as string;\n\t\tconst imgSrc = baseUrl + imageUrl;\n\n\t\tconst imgCallback = (): void => {\n\t\t\tthis._store[imgSrc] = image;\n\n\t\t\tObject.keys(file.frames).forEach((frame) => {\n\t\t\t\tthis._store[frame] = file.frames[frame];\n\t\t\t\tthis._store[frame].source = image;\n\t\t\t});\n\n\t\t\tif (callback != null) callback();\n\t\t};\n\n\t\tconst image = new Image();\n\t\timage.addEventListener(\"load\", imgCallback);\n\t\timage.src = imgSrc;\n\t}\n\n\tpublic loadSound(source: string, callback?: () => void): void {\n\t\tconst sound = new Sound(source);\n\t\tsound.load().then(() => {\n\t\t\tthis._store[sound.name] = sound;\n\t\t\tif (callback != null) callback();\n\t\t});\n\t}\n}\n","import { Pointer } from \"./inputs/Pointer\";\nimport { Loader } from \"./Loader\";\nimport { type DisplayObject } from \"./DisplayObject\";\nimport { type Stage } from \"./Stage\";\nimport { Scene } from \"./Scene\";\nimport { Point, Vector2D } from \"./math\";\nimport { Detect } from \"./utils\";\nimport {\n\tEC_BUTTONS,\n\tEC_DRAGGABLE_SPRITES,\n\tEC_EMITTERS,\n\tEC_PARTICLES,\n\tEC_SHAKING_SPRITES,\n\tEC_TWEENS,\n} from \"./EngineConstants\";\nimport { Line } from \"./geom\";\nimport { Spritemap } from \"./graphics\";\n\ninterface Viewport {\n\tscale: Point;\n\tx: number;\n\ty: number;\n\twidth: number;\n\theight: number;\n}\n\n/**\n *\n * Main game engine class. Manages the game loop.\n *\n * ```ts\n * import { Engine } from \"inks2d\";\n *\n * const g = new Engine(500, 500);\n * g.start();\n * ```\n *\n * @category inks2d\n */\nexport class Engine {\n\t/**\n\t * Returns the HTML5 canvas element where the game is rendered.\n\t */\n\tpublic canvas: HTMLCanvasElement;\n\t/**\n\t * Enable/Disable the debug mode.\n\t */\n\tpublic debug: boolean = false;\n\t/**\n\t * Returns the Pointer object.\n\t */\n\tpublic pointer: Pointer;\n\t/**\n\t * Returns the Loader object.\n\t *\n\t * @see {@link Loader}\n\t */\n\tpublic loader: Loader;\n\t/**\n\t * Prints a text on screen when `debug` is enable.\n\t */\n\tpublic print: string = \"\";\n\n\tprivate _scene: Scene = new Scene();\n\tprivate _paused: boolean = false;\n\tprivate readonly _viewport: Viewport = {\n\t\tscale: new Point(1, 1),\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\n\tprivate readonly _interval: number;\n\tprivate _screenmode: string = \"normal\";\n\tprivate _then: number = 0;\n\tprivate _lag: number = 0;\n\tprivate _counter: number = 0;\n\tprivate _elapsed: number = 0;\n\tprivate _delta: number = 0;\n\tprivate readonly _fixed: boolean;\n\t// private readonly _framerate: number;\n\tprivate _fps: number;\n\n\t/**\n\t * Constructor. Defines startup information about your game.\n\t *\n\t * @param width The width of your game.\n\t * @param height The height of your game.\n\t * @param framerate The game framerate, in frames per second.\n\t * @param fixed If a fixed-framerate should be used.\n\t * @param border Set a border in the canvas.\n\t * @param backgroundColor Canvas background color.\n\t *\n\t */\n\tconstructor(\n\t\twidth: number = 256,\n\t\theight: number = 256,\n\t\tframerate: number = 60,\n\t\tfixed: boolean = true,\n\t\tborder: string = \"1px dashed black\",\n\t\tbackgroundColor: string = \"white\",\n\t) {\n\t\tthis._interval = 1000 / framerate;\n\t\tthis._fixed = fixed;\n\t\t// this._framerate = framerate;\n\t\tthis._fps = framerate;\n\n\t\t// self.onReward = undefined;\n\t\t// self.onBackButton = undefined;\n\n\t\tconst canvas: HTMLCanvasElement = document.querySelector(\n\t\t\t\"#game\",\n\t\t) as HTMLCanvasElement;\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tcanvas.style.border = border;\n\t\tcanvas.style.backgroundColor = backgroundColor;\n\n\t\tthis.canvas = canvas;\n\n\t\tcanvas.addEventListener(\n\t\t\t\"blur\",\n\t\t\t(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\n\t\tthis.pointer = new Pointer(this);\n\t\tthis.loader = new Loader();\n\t\tthis._scene = new Scene();\n\t\tthis._scene.start(this);\n\n\t\tthis._viewport.width = this.canvas.width;\n\t\tthis._viewport.height = this.canvas.height;\n\t}\n\n\t/**\n\t * The currently active Stage object.\n\t */\n\tget stage(): Stage {\n\t\treturn this._scene.stage;\n\t}\n\n\t/**\n\t * Time elapsed since the last frame (in miliseconds).\n\t */\n\tget elapsed(): number {\n\t\treturn this._delta;\n\t}\n\n\t/***/\n\tget fullscreen(): boolean {\n\t\treturn this._screenmode === \"full\";\n\t}\n\n\t/**\n\t * Enable/Disable fullscren mode.\n\t * @defaultValue false\n\t */\n\tset fullscreen(value: boolean) {\n\t\tthis._screenmode = value ? \"full\" : \"normal\";\n\t\tthis.resize();\n\t}\n\n\t/***/\n\tget centerscreen(): boolean {\n\t\treturn this._screenmode === \"center\";\n\t}\n\n\t/**\n\t * Centers the game in the page.\n\t * @defaultValue false\n\t */\n\tset centerscreen(value: boolean) {\n\t\tthis._screenmode = value ? \"center\" : \"normal\";\n\t\tthis.resize();\n\t}\n\n\t/**\n\t * Returns if the game engine is playing (not paused).\n\t */\n\tget playing(): boolean {\n\t\treturn !this._paused;\n\t}\n\n\t/***/\n\tget scene(): Scene {\n\t\treturn this._scene;\n\t}\n\n\t/**\n\t * The currently active Scene.\n\t */\n\tset scene(value: Scene) {\n\t\tif (this._scene) this._scene.destroy();\n\t\tthis._scene = value;\n\t\tthis._scene.start(this);\n\t}\n\n\t/**\n\t * The current fps.\n\t */\n\tget fps(): number {\n\t\treturn this._fps;\n\t}\n\n\t/**\n\t * Pause the game engine.\n\t */\n\tpause(): void {\n\t\tthis._paused = true;\n\t}\n\n\t/**\n\t * Resume the game engine.\n\t */\n\tresume(): void {\n\t\tthis._paused = false;\n\t}\n\n\t/**\n\t * Starts the game engine.\n\t */\n\tstart(): void {\n\t\tif (!this.stage) throw new Error(\"Game Scene not Found!\");\n\n\t\tthis._then = Date.now();\n\n\t\tif (this._fixed) {\n\t\t\twindow.setInterval(this.update.bind(this), 1000 / this._fps);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Updates the game, updating the Stage and display objects\n\t */\n\tpublic update(): void {\n\t\tif (!this.stage) throw new Error(\"Game Scene not Found!\");\n\n\t\tif (!this._fixed) requestAnimationFrame(this.update.bind(this));\n\n\t\tconst canvas: HTMLCanvasElement = this.canvas;\n\t\tconst ctx: CanvasRenderingContext2D = this.stage.graphics;\n\n\t\tcanvas.style.cursor = \"auto\";\n\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tconst now = Date.now();\n\n\t\tthis._delta = now - this._then;\n\t\tthis._elapsed += this._delta;\n\t\tthis._lag += this._delta;\n\t\tthis._counter++;\n\n\t\tif (this._elapsed > 1000) {\n\t\t\tthis._fps = this._counter;\n\t\t\tthis._elapsed = 0;\n\t\t\tthis._counter = 0;\n\t\t}\n\n\t\twhile (this._lag >= this._interval) {\n\t\t\t// if (this._fixed && this._counter >= this._framerate) break;\n\n\t\t\tthis._lag -= this._interval;\n\t\t\tthis.gameloop();\n\t\t}\n\n\t\tthis.render();\n\t\t// this.gameloop();\n\n\t\tthis._then = now;\n\t}\n\n\t/**\n\t * Renders the game, rendering the Stage and display objects.\n\t */\n\tpublic render(): void {\n\t\tconst self = this;\n\t\tconst stage: Stage = this.stage;\n\t\tconst ctx: CanvasRenderingContext2D = this.stage?.graphics;\n\t\tlet totalDraws = 0;\n\t\tlet totalObjects = 0;\n\n\t\tctx.save(); // #1\n\t\tctx.scale(this._viewport.scale.x, this._viewport.scale.y);\n\n\t\tctx.save(); // #2\n\t\tctx.translate(-this._viewport.x, -this._viewport.y);\n\n\t\tstage.children.forEach((sprite) => {\n\t\t\tdisplay(sprite);\n\t\t});\n\n\t\tctx.restore(); // #2\n\n\t\tif (this.debug) {\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(0, 0, stage.width, stage.height);\n\t\t\tctx.fillStyle = \"gray\";\n\t\t\tctx.globalAlpha = 0.5;\n\t\t\tctx.fill();\n\t\t\tctx.restore();\n\n\t\t\tctx.save();\n\t\t\tctx.font = \"normal normal 14px sans-serif\";\n\t\t\tctx.fillStyle = \"white\";\n\t\t\tctx.textBaseline = \"top\";\n\t\t\tctx.textAlign = \"left\";\n\t\t\tctx.fillText(\"FPS: \", 15, 15);\n\t\t\tctx.fillText(\"Objects: \", 15, 32);\n\t\t\tctx.fillText(\"Drawing: \", 15, 49);\n\t\t\tctx.fillText(\"Debug: \", 15, 66); // 83\n\n\t\t\tctx.fillText(this._fps.toString(), 80, 15);\n\t\t\tctx.fillText(totalObjects.toString(), 80, 32);\n\t\t\tctx.fillText(totalDraws.toString(), 80, 49);\n\t\t\tctx.fillText(this.print.toString(), 80, 67);\n\t\t\tctx.restore();\n\t\t}\n\n\t\tctx.restore(); // #1\n\n\t\tfunction round(num: number): number {\n\t\t\treturn (0.5 + num) | 0;\n\t\t}\n\n\t\tfunction display(sprite: DisplayObject): void {\n\t\t\tconst parentAlpha = sprite.parent === undefined ? 1 : sprite.parent.alpha;\n\t\t\ttotalObjects++;\n\n\t\t\tif (\n\t\t\t\t(sprite.visible && self.isOnViewport(sprite)) ||\n\t\t\t\tsprite.renderOutside\n\t\t\t) {\n\t\t\t\ttotalDraws++;\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(round(sprite.position.x), round(sprite.position.y));\n\n\t\t\t\tctx.rotate(sprite.rotation);\n\t\t\t\tctx.globalAlpha = sprite.alpha * parentAlpha;\n\t\t\t\tctx.scale(sprite.scale.x, sprite.scale.y);\n\n\t\t\t\tif (sprite.shadow) {\n\t\t\t\t\tctx.shadowColor = sprite.shadowColor;\n\t\t\t\t\tctx.shadowOffsetX = sprite.shadowOffsetX;\n\t\t\t\t\tctx.shadowOffsetY = sprite.shadowOffsetY;\n\t\t\t\t\tctx.shadowBlur = sprite.shadowBlur;\n\t\t\t\t}\n\n\t\t\t\tif (sprite.blendMode) ctx.globalCompositeOperation = sprite.blendMode;\n\n\t\t\t\tctx.filter = sprite.filter;\n\n\t\t\t\tif (sprite instanceof Spritemap)\n\t\t\t\t\tsprite.customProperties.elapsed = self.elapsed;\n\n\t\t\t\t// @ts-expect-error DisplayObject don't have a render method;\n\t\t\t\tif (sprite.render) sprite.render(ctx);\n\n\t\t\t\tctx.filter = \"none\";\n\n\t\t\t\tif (self.debug) {\n\t\t\t\t\tctx.rotate(-sprite.rotation);\n\t\t\t\t\tctx.beginPath();\n\n\t\t\t\t\tif (!(sprite instanceof Text)) {\n\t\t\t\t\t\tctx.rect(\n\t\t\t\t\t\t\tsprite.bounds.x - sprite.width * sprite.pivot.x,\n\t\t\t\t\t\t\tsprite.bounds.y - sprite.height * sprite.pivot.y,\n\t\t\t\t\t\t\tsprite.bounds.width,\n\t\t\t\t\t\t\tsprite.bounds.height,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tctx.lineWidth = 3;\n\t\t\t\t\t\tctx.strokeStyle = \"red\";\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.rect(-2.5, -2.5, 5, 5);\n\t\t\t\t\tctx.lineWidth = 3;\n\t\t\t\t\tctx.strokeStyle = \"black\";\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\t\t\t\t}\n\n\t\t\t\tif (sprite.children && sprite.children.length > 0) {\n\t\t\t\t\tctx.translate(0, 0);\n\n\t\t\t\t\tsprite.children.forEach((child) => {\n\t\t\t\t\t\tdisplay(child);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the viewport scale.\n\t */\n\tpublic getViewportScale(): Point {\n\t\treturn this._viewport.scale.clone();\n\t}\n\n\t/**\n\t * Returns the viewport size.\n\t */\n\tpublic getViewportSize(): { width: number; height: number } {\n\t\treturn { width: this._viewport.width, height: this._viewport.height };\n\t}\n\n\tprivate isOnViewport(sprite: DisplayObject): boolean {\n\t\tif (sprite instanceof Line) {\n\t\t\tsprite.isOnViewport = true;\n\t\t\treturn sprite.isOnViewport;\n\t\t}\n\n\t\tconst vpHalfWidth = this._viewport.width / 2;\n\t\tconst vpHalfHeight = this._viewport.height / 2;\n\n\t\tconst vec = new Vector2D(\n\t\t\tnew Point(\n\t\t\t\tsprite.gx - sprite.width * sprite.pivot.x + sprite.halfWidth,\n\t\t\t\tsprite.gy - sprite.height * sprite.pivot.y + sprite.halfHeight,\n\t\t\t),\n\t\t\tnew Point(\n\t\t\t\tthis._viewport.x + vpHalfWidth,\n\t\t\t\tthis._viewport.y + vpHalfHeight,\n\t\t\t),\n\t\t);\n\n\t\tconst combinedHalfWidths = sprite.halfWidth + vpHalfWidth;\n\t\tconst combinedHalfHeights = sprite.halfHeight + vpHalfHeight;\n\n\t\tif (Math.abs(vec.vx) < combinedHalfWidths) {\n\t\t\tif (Math.abs(vec.vy) < combinedHalfHeights) {\n\t\t\t\tsprite.isOnViewport = true;\n\t\t\t\treturn sprite.isOnViewport;\n\t\t\t}\n\t\t}\n\n\t\tsprite.isOnViewport = false;\n\t\treturn sprite.isOnViewport;\n\t}\n\n\tprivate gameloop(): void {\n\t\tif (EC_DRAGGABLE_SPRITES.length > 0) {\n\t\t\tthis.pointer._____updateDragAndDrop();\n\t\t}\n\n\t\tif (EC_BUTTONS.length > 0) {\n\t\t\tEC_BUTTONS.forEach((button) => {\n\t\t\t\tbutton.customProperties.buttonProps._____updateButton(this.pointer);\n\t\t\t\tif (\n\t\t\t\t\tbutton.customProperties.buttonProps.state === \"over\" ||\n\t\t\t\t\tbutton.customProperties.buttonProps.state === \"down\"\n\t\t\t\t) {\n\t\t\t\t\tif (button.parent !== undefined) {\n\t\t\t\t\t\tthis.canvas.style.cursor = \"pointer\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (EC_EMITTERS.length > 0) {\n\t\t\tEC_EMITTERS.forEach((emitter) => {\n\t\t\t\temitter._____updateEmitter(this.elapsed);\n\t\t\t});\n\t\t}\n\n\t\tif (EC_PARTICLES.length > 0) {\n\t\t\tEC_PARTICLES.forEach((particle) => {\n\t\t\t\tparticle.customProperties._____updateParticle();\n\t\t\t});\n\t\t}\n\n\t\tif (EC_TWEENS.length > 0) {\n\t\t\tEC_TWEENS.forEach((tween) => {\n\t\t\t\ttween.update(this.elapsed);\n\t\t\t});\n\t\t}\n\n\t\tif (EC_SHAKING_SPRITES.length > 0) {\n\t\t\tEC_SHAKING_SPRITES.forEach((sprite) => {\n\t\t\t\tsprite.customProperties._____updateShake();\n\t\t\t});\n\t\t}\n\n\t\tif (this._scene && !this._paused) {\n\t\t\tif (this._scene) this._scene.update();\n\t\t}\n\n\t\tthis.pointer.clearCache();\n\t}\n\n\tprivate resize(): void {\n\t\tif (!this.stage) throw new Error(\"Game Scene not Found!\");\n\n\t\tconst auto = \"auto\";\n\t\tconst canvas = this.canvas;\n\t\tconst stage = this.stage;\n\n\t\tcanvas.style.top = auto;\n\t\tcanvas.style.left = auto;\n\t\tcanvas.style.marginTop = auto;\n\t\tcanvas.style.marginLeft = auto;\n\t\tcanvas.style.position = \"static\";\n\t\tcanvas.style.transform = \"scale(1, 1)\";\n\t\tcanvas.width = stage.width;\n\t\tcanvas.height = stage.height;\n\n\t\tthis._viewport.scale.x = 1;\n\t\tthis._viewport.scale.y = 1;\n\n\t\tconst wWidth = Detect.Android() ? window.outerWidth : window.innerWidth;\n\t\tconst wHeight = Detect.Android() ? window.outerHeight : window.innerHeight;\n\n\t\tswitch (this._screenmode) {\n\t\t\tcase \"full\":\n\t\t\t\tthis._viewport.scale.x = wWidth / stage.width;\n\t\t\t\tthis._viewport.scale.y = wHeight / stage.height;\n\n\t\t\t\tcanvas.style.transformOrigin = \"0 0\";\n\t\t\t\tcanvas.style.transform = \"scale(1)\";\n\n\t\t\t\tcanvas.width = wWidth;\n\t\t\t\tcanvas.height = wHeight;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tcanvas.style.top = \"50%\";\n\t\t\t\tcanvas.style.left = \"50%\";\n\t\t\t\tcanvas.style.marginTop = `${-stage.height / 2}px`;\n\t\t\t\tcanvas.style.marginLeft = `${-stage.width / 2}px`;\n\t\t\t\tcanvas.style.position = \"absolute\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"]}