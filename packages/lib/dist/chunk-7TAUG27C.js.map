{"version":3,"sources":["../src/group/Group.ts","../src/group/Grid.ts"],"names":["Group","DisplayObject","spritesToGroup","value","_newWidth","_newHeight","child","sprite","isRemoved","Grid","columns","rows","cellWidth","cellHeight","centerCell","xOffset","yOffset","makeSprite","callback","length","i","x","y"],"mappings":"wCAEO,IAAMA,EAAN,cAAoBC,CAAc,CAChC,QAAmB,GAE3B,eAAeC,EAAiC,CAC/C,MAAM,EACN,KAAK,IAAI,GAAGA,CAAc,CAC3B,CAEA,IAAI,aAAuB,CAC1B,OAAO,KAAK,OACb,CAEA,IAAI,YAAYC,EAAgB,CAC/B,KAAK,QAAUA,EACXA,GAAO,KAAK,cAAc,CAC/B,CAEQ,eAAsB,CAC7B,GAAI,KAAK,SAAS,OAAS,EAAG,CAC7B,IAAIC,EAAY,EACZC,EAAa,EAEjB,KAAK,SAAS,QAASC,GAAU,CAC5BA,EAAM,SAAS,EAAIA,EAAM,MAAQF,IACpCA,EAAYE,EAAM,SAAS,EAAIA,EAAM,OAGlCA,EAAM,SAAS,EAAIA,EAAM,OAASD,IACrCA,EAAaC,EAAM,SAAS,EAAIA,EAAM,OAExC,CAAC,EAED,KAAK,MAAQF,EACb,KAAK,OAASC,EAEhB,CAEgB,SAASE,EAA6B,CACrD,MAAM,SAASA,CAAM,EACrB,KAAK,cAAc,CACpB,CAEgB,YAAYA,EAAgC,CAC3D,IAAMC,EAAY,MAAM,YAAYD,CAAM,EAE1C,OAAIC,GAAW,KAAK,cAAc,EAE3BA,CACR,CACD,EChDO,IAAMC,EAAN,cAAmBT,CAAM,CAC/B,YACCU,EAAkB,EAClBC,EAAe,EACfC,EAAoB,GACpBC,EAAqB,GACrBC,EAAsB,GACtBC,EAAkB,EAClBC,EAAkB,EAClBC,EACAC,EACC,CACD,MAAM,EAEN,IAAMC,EAAST,EAAUC,EAEzB,QAASS,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAChC,IAAMC,EAAKD,EAAIV,EAAWE,EACpBU,EAAI,KAAK,MAAMF,EAAIV,CAAO,EAAIG,EAE9BN,EAASU,EAAW,EAC1B,KAAK,SAASV,CAAM,EAEfO,GAIJP,EAAO,SAAS,EAAIc,EAAIT,EAAY,EAAIG,EACxCR,EAAO,SAAS,EAAIe,EAAIT,EAAa,EAAIG,IAJzCT,EAAO,SAAS,EAAIc,EAAIN,EACxBR,EAAO,SAAS,EAAIe,EAAIN,GAMHE,IAASX,CAAM,EAEvC,CACD","sourcesContent":["import { DisplayObject } from \"DisplayObject\";\n\nexport class Group extends DisplayObject {\n\tprivate _resize: boolean = false;\n\n\tconstructor(...spritesToGroup: DisplayObject[]) {\n\t\tsuper();\n\t\tthis.add(...spritesToGroup);\n\t}\n\n\tget dynamicSize(): boolean {\n\t\treturn this._resize;\n\t}\n\n\tset dynamicSize(value: boolean) {\n\t\tthis._resize = value;\n\t\tif (value) this.calculateSize();\n\t}\n\n\tprivate calculateSize(): void {\n\t\tif (this.children.length > 0) {\n\t\t\tlet _newWidth = 0;\n\t\t\tlet _newHeight = 0;\n\n\t\t\tthis.children.forEach((child) => {\n\t\t\t\tif (child.position.x + child.width > _newWidth) {\n\t\t\t\t\t_newWidth = child.position.x + child.width;\n\t\t\t\t}\n\n\t\t\t\tif (child.position.y + child.height > _newHeight) {\n\t\t\t\t\t_newHeight = child.position.y + child.height;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.width = _newWidth;\n\t\t\tthis.height = _newHeight;\n\t\t}\n\t}\n\n\tpublic override addChild(sprite: DisplayObject): void {\n\t\tsuper.addChild(sprite);\n\t\tthis.calculateSize();\n\t}\n\n\tpublic override removeChild(sprite: DisplayObject): boolean {\n\t\tconst isRemoved = super.removeChild(sprite);\n\n\t\tif (isRemoved) this.calculateSize();\n\n\t\treturn isRemoved;\n\t}\n}\n","import { type DisplayObject } from \"DisplayObject\";\nimport { Group } from \"./Group\";\n\nexport class Grid extends Group {\n\tconstructor(\n\t\tcolumns: number = 0,\n\t\trows: number = 0,\n\t\tcellWidth: number = 32,\n\t\tcellHeight: number = 32,\n\t\tcenterCell: boolean = false,\n\t\txOffset: number = 0,\n\t\tyOffset: number = 0,\n\t\tmakeSprite: () => DisplayObject,\n\t\tcallback?: (sprite: DisplayObject) => void,\n\t) {\n\t\tsuper();\n\n\t\tconst length = columns * rows;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst x = (i % columns) * cellWidth;\n\t\t\tconst y = Math.floor(i / columns) * cellHeight;\n\n\t\t\tconst sprite = makeSprite();\n\t\t\tthis.addChild(sprite);\n\n\t\t\tif (!centerCell) {\n\t\t\t\tsprite.position.x = x + xOffset;\n\t\t\t\tsprite.position.y = y + yOffset;\n\t\t\t} else {\n\t\t\t\tsprite.position.x = x + cellWidth / 2 + xOffset;\n\t\t\t\tsprite.position.y = y + cellHeight / 2 + yOffset;\n\t\t\t}\n\n\t\t\tif (callback != null) callback(sprite);\n\t\t}\n\t}\n}\n"]}