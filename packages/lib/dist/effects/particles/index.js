import { j } from '../../chunk-EHXEFJQV.js';
import { a as a$1 } from '../../chunk-YI57HGPY.js';
import '../../chunk-7TAUG27C.js';
import '../../chunk-BW6TL2PK.js';
import '../../chunk-GJBY4KIL.js';
import { c as c$1, e } from '../../chunk-6LMX6XHW.js';
import { a, d, c } from '../../chunk-JXTEU5XG.js';

var h=class{_source;_angles;_randomSpacing;_minAngle;_maxAngle;_minSize;_maxSize;_minSpeed;_maxSpeed;_numParticles;_minScaleSpeed;_maxScaleSpeed;_minAlphaSpeed;_maxAlphaSpeed;_minRotationSpeed;_maxRotationSpeed;_maxInteractions;position=new a;gravity=new a;constructor(i,e=new a,t=new a,s=10,l=!0,m=0,a$1=360,o=4,y=16,g=.1,P=1,v=.01,x=.05,f=.02,A=.02,R=.01,z=.03,I=1/0){this._source=i,this._angles=[],this.position=e,this.gravity=t,this._randomSpacing=l,this._minAngle=m,this._maxAngle=a$1,this._minSize=o,this._maxSize=y,this._minSpeed=g,this._maxSpeed=P,this._numParticles=s,this._minScaleSpeed=v,this._maxScaleSpeed=x,this._minAlphaSpeed=f,this._maxAlphaSpeed=A,this._minRotationSpeed=R,this._maxRotationSpeed=z,this._maxInteractions=I;}setNumParticles(i){return this._numParticles=i,this}setPosition(i){return this.position=i.clone(),this}setAngle(i,e){return this._minAngle=i,this._maxAngle=e,this}setSize(i,e){return this._minSize=i,this._maxSize=e,this}setSpeed(i,e){return this._minSpeed=i,this._maxSpeed=e,this}setScaleSpeed(i,e){return this._minScaleSpeed=i,this._maxScaleSpeed=e,this}setAlphaSpeed(i,e){return this._minAlphaSpeed=i,this._maxAlphaSpeed=e,this}setRotationSpeed(i,e){return this._minRotationSpeed=i,this._maxRotationSpeed=e,this}emit(){let i=(this._maxAngle-this._minAngle)/(this._numParticles-1);this._angles=[];for(let e=0;e<this._numParticles;e++){let t,s;this._randomSpacing?(t=d(this._minAngle,this._maxAngle),s=Math.PI*t/180,this._angles.push(s)):(t===void 0&&(t=this._minAngle),this._angles.push(t),t+=i);}this._angles.forEach(e=>{this.makeParticle(e);});}makeParticle(i){let e=this._source();e instanceof a$1&&e.frames.length>0&&e.gotoAndStop(c(0,e.frames.length-1)),e.position=this.position.clone();let t=c(this._minSize,this._maxSize);e.width=t,e.height=t,e.customProperties.scaleSpeed=d(this._minScaleSpeed,this._maxScaleSpeed),e.customProperties.alphaSpeed=d(this._minAlphaSpeed,this._maxAlphaSpeed),e.customProperties.rotationSpeed=d(this._minRotationSpeed,this._maxRotationSpeed),e.customProperties.lives=this._maxInteractions;let s=d(this._minSpeed,this._maxSpeed);e.velocity.x=s*Math.cos(i),e.velocity.y=s*Math.sin(i),e.customProperties._____updateParticle=()=>{e.velocity.x+=this.gravity.x,e.velocity.y+=this.gravity.y,e.position.x+=e.velocity.x,e.position.y+=e.velocity.y,e.scale.x-e.customProperties.scaleSpeed>0&&(e.scale.x-=e.customProperties.scaleSpeed),e.scale.y-e.customProperties.scaleSpeed>0&&(e.scale.y-=e.customProperties.scaleSpeed),e.rotation+=e.customProperties.rotationSpeed,e.alpha-=e.customProperties.alphaSpeed,(e.alpha<=0||--e.customProperties.lives<=0)&&(c$1.splice(c$1.indexOf(e),1),j(e));},c$1.push(e);}};var u=class{_particles={};_playing=[];_particleNames=[];constructor(){e.push(this);}_____updateEmitter(i){for(let e=0;e<this._playing.length;e++){let t=this._playing[e],s=this._particles[t];if(!s.playing)continue;let l=s.particle,m=s.delay,a=s.elapsed,o=s.last;a+=i,a>=m&&(l.emit(),a=0),this._particles[t].elapsed=a,this._particles[t].last=o;}}addParticle(i,e,t){this._particles[i]={particle:e,delay:t,elapsed:0,last:0,playing:!1},this._particleNames=Object.keys(this._particles);}play(i){!this._particles[i]||this._particles[i].playing||(this._particles[i].playing=!0,this._playing.push(i));}stop(i){!this._particles[i]||this._particles[i].playing||(this._particles[i].playing=!1,this._playing.splice(this._playing.indexOf(i),1));}playAll(){for(let i=0;i<this._particleNames.length;i++){let e=this._particleNames[i];this._particles[e].playing=!0,this._playing.push(e);}}stopAll(){for(let i=0;i<this._particleNames.length;i++){let e=this._particleNames[i];this._particles[e].playing=!1,this._playing.splice(this._playing.indexOf(e),1);}}};

export { u as Emitter, h as ParticleSystem };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map